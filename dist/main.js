(()=>{var e={494:()=>{class e extends HTMLElement{constructor(){super(),this.shadowDOM=this.attachShadow({mode:'open'})}connectedCallback(){this.render()}set clickEvent(e){this._clickEvent=e,this.render()}get value(){return this.shadowDOM.querySelector('#searchElement').value}render(){this.shadowDOM.innerHTML='\n    <style>\n    .search-container {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        padding: 20px;\n      }\n      input[type="search"] {\n        padding: 15px 20px;\n        width: 500px;\n        border-radius: 30px;\n        font-size: 1em;\n        color: #0a111f;\n        font-family: var(--font-inter);\n        letter-spacing: 1.5px;\n        outline: none;\n        border: none;\n        margin-right: 5px;\n      }\n      #btn-search {\n        padding: 15px 30px;\n        border-radius: 30px;\n        border: none;\n        cursor: pointer;\n        background-color: var(--button-color);\n        color: white;\n        font-size: 1em;\n      }\n    </style>\n    <div class="search-container" id="search-container">\n        <input\n        type="search"\n        id="searchElement"\n        placeholder="Cari..."\n        />\n        <button type="submit" id="btn-search">Cari</button>\n  </div>\n    ',this.shadowDOM.querySelector('#btn-search').addEventListener('click',this._clickEvent)}}customElements.define('search-bar',e)}},n={};function t(r){var s=n[r];if(void 0!==s)return s.exports;var o=n[r]={exports:{}};return e[r](o,o.exports,t),o.exports}(()=>{'use strict';const e=class{static searchMovie=e=>fetch(`https://sports-api.dicoding.dev/teams/search?t=${e}`).then((e=>e.json())).then((n=>n.teams?Promise.resolve(n.teams):Promise.reject(`${e} is not found`)))};t(494);document.addEventListener('DOMContentLoaded',(()=>{const n=document.querySelector('search-bar');n.clickEvent=async()=>{try{const r=await e.searchMovie(n.value);t=r,console.log(t)}catch(e){(e=>{console.log(e)})(e)}var t}}))})()})()